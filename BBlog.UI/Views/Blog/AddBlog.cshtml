@model EntityLayer.Concrete.Blog
@{
    ViewData["Title"] = "Add Blog";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<div class="card">
    <div class="card-body">
        <div class="card-title">
            <div class="page-header">
                <h3 class="page-title">
                    <span class="page-title-icon bg-gradient-primary text-white mr-2">
                        <i class="mdi mdi-database-plus"></i>
                    </span> Add Blog
                    <a href="/Blog/BlogListByWriter" class="page-title-icon bg-gradient-info text-white mr-2" style="position:absolute;right:33px"><i class="mdi mdi-keyboard-backspace"></i></a>
                </h3>
            </div>
        </div>
        @using (Html.BeginForm("AddBlog", "Blog", FormMethod.Post))
        {
            @Html.Label("Title")
            @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger" })
            <br />
            @Html.Label("Thumbnail Image")
            @Html.TextBoxFor(x => x.ThumbnailImage, new { @class = "form-control" })
            <br />
            @Html.Label("Image")
            @Html.TextBoxFor(x => x.Image, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Image, "", new { @class = "text-danger" })
            <br />
            @Html.Label("Category")
            @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.c, new { @class = "form-control", @style = "color:black" })
            <br />
            @Html.Label("Blog Content")
            @Html.TextAreaFor(x => x.BlogContent, 15, 3, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.BlogContent, "", new { @class = "text-danger" })
            <br />
            <button type="submit" class="btn btn-gradient-primary">Add</button>
        }
    </div>
</div>
